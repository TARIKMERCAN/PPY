# -*- coding: utf-8 -*-
"""Lab2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12V1Ndznj0M65EmiKLYNl9VyHnRsJpcJa

Warning:

After each exercise from now on, do a git commit and write in a message what you did.

3.
Write a Python program that takes input from the user to create a list of integers and then performs the following operations:

  a. Input: Ask the user to enter a series of space-separated integers.

  b. Convert Input: Convert the input string into a list of integers.
  
  c. Sorting: Sort the list in ascending order.

  example:
  ```
  Enter a series of space-separated integers: 5 2 8 1 9

  Sorted list: [1, 2, 5, 8, 9]
  ```
"""

input_numbers = input("Enter a series of space-separated integers: ")

numbers_list = []
current_number = ""

for char in input_numbers:
    if char != ' ':
        current_number += char
    else:
        if current_number:
            numbers_list.append(int(current_number))
            current_number = ""

if current_number:
    numbers_list.append(int(current_number))

for i in range(len(numbers_list)):
    for j in range(i + 1, len(numbers_list)):
        if numbers_list[i] > numbers_list[j]:
            numbers_list[i], numbers_list[j] = numbers_list[j], numbers_list[i]

print("Sorted list:", numbers_list)

"""-----------------------------------------------------------------------------

Difference between Lists and Tuples:

Lists are mutable, meaning their elements can be changed after creation, while tuples are immutable, meaning their elements cannot be changed after creation.
Lists are represented by square brackets [ ], whereas tuples are represented by parentheses ( ).
Lists have methods like append(), insert(), and remove() to modify the list, while tuples do not support such methods due to their immutability.
Lists are typically used when the elements need to be modified or updated frequently, while tuples are used when the data is meant to be constant or unchangeable.

-----------------------------------------------------------------------------

4.
Extend the previous Python program to include tuples. Now, in addition to creating a list of integers from user input, the program should also create a tuple of those integers and perform the following operations:

  a. Input: Ask the user to enter a series of space-separated integers.

  b. Convert Input: Convert the input string into a list of integers and a tuple of integers.

  c. Sorting: Sort both the list and the tuple in ascending order.

  d. Print Output: Print the sorted list and tuple.

  example:
  ```
  Enter a series of space-separated integers: 5 2 8 1 9
  
  Sorted list: [1, 2, 5, 8, 9]
  Sorted tuple: (1, 2, 5, 8, 9)
  ```
"""

input_numbers = input("Enter a series of space-separated integers: ")

numbers_list = []
current_number = ""

for char in input_numbers:
    if char != ' ':
        current_number += char
    else:
        if current_number:
            numbers_list.append(int(current_number))
            current_number = ""

if current_number:
    numbers_list.append(int(current_number))

numbers_tuple = tuple(numbers_list)

numbers_list.sort()
sorted_tuple = tuple(sorted(numbers_tuple))

print("Sorted list:", numbers_list)
print("Sorted tuple:", sorted_tuple)


